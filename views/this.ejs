<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <!-- SweetAlert2 CSS and JS -->
  <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@5.0.16/dark.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.min.js" integrity="sha512-3PL7jW3xI1EjF2Hfqwv5u6nKG/BnUbWytnJDhsY/q5CbIB5XzoHNhJvgmFeVD7xgC9DbKDm+gPP9uDAAfLAZUA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <!-- Bootstrap CSS -->
  <!-- <link rel="stylesheet" href="CSS/bootstrap.min.css" type="text/css" /> -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
  <!-- Font Awesome CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <!-- Custom CSS -->
  <link rel="stylesheet" href="../CSS/style.css" type="text/css" />
  <script src="https://cdn.jsdelivr.net/npm/quagga/dist/quagga.min.js"></script>


  <title>Crud System</title>
  <!-- Browser logo -->
  <link rel="icon" type="image/png" sizes="32x32" href="https://logopond.com/logos/70a5a28358a0f80718ac4f6737f018ae.png" />
  <style>
    /* Add these styles to your existing style.css or create a new CSS file */

body {
  font-family: Arial, sans-serif;
  background-color: #f8f9fa;
  padding-top: 20px;
}
/* Overlay for the loading indicator */
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  display: none; /* Initially hidden */
}

/* Spinner animation */
.spinner {
  width: 50px;
  height: 50px;
  border: 5px solid #f3f3f3; /* Light gray */
  border-top: 5px solid #3498db; /* Blue */
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Text below the spinner */
.loading-overlay p {
  color: #fff;
  font-size: 18px;
  margin-top: 10px;
}

/* Keyframes for spinner animation */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.btn-circle.btn-lg {
  width: 50px;
  height: 50px;
  padding: 10px 16px;
  font-size: 19px;
  line-height: 1.33;
  border-radius: 25px;
}
.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.container {
  max-width: 100%;
}

.shadow-lg {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.bg-light {
  background-color: #fff;
}

.table {
  width: 100%;
  margin-bottom: 1rem;
  background-color: #fff;
}

.table th,
.table td {
  vertical-align: middle;
}

.table-hover tbody tr:hover {
  background-color: rgba(0, 0, 0, 0.075);
}

.form-control {
  width: 100%;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
}

.btn {
  cursor: pointer;
}

.btn-primary {
  background-color: #007bff;
  border-color: #007bff;
}

.btn-primary:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

.btn-danger {
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-danger:hover {
  background-color: #c82333;
  border-color: #bd2130;
}

@media (max-width: 768px) {
  .form-control {
    width: 100%;
  }

}
label{
display: flex;
justify-content: center;
}

  .spinner-option::before {
    content: "";
    display: inline-block;
    width: 1em;
    height: 1em;
    border: 2px solid #ccc;
    border-top: 2px solid #000;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  </style>
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
<div class="position-relative">
  <a href="/storage" class="position-absolute top-1 start-0 m-0" >
    <i class="material-icons" style="font-size: 35px; color: #ff8800; margin-left: 32px; margin-top: 20px;">inventory_2</i>
  </a>
</div>
  <% if(isUser){ %>
  
    <div class="text-center mt-3">
      <a href="/logout" class="btn btn-danger btn-circle btn-lg">
        <i class="fa fa-sign-out " aria-hidden="true"></i>
      </a>
    </div>
  <% } %>

<div class="modal fade modal-dialog modal-dialog-centered" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="display: none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">اختر موظفاَ</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
          <label for="price"><strong>: Employee Name</strong></label>
          <select class="sel form-control">
            <option class="opt" disabled selected></option>
          </select>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-success check w-100">Check</button>
        <br>
        <button type="button" class="btn btn-info reload w-100">Reload List</button>
      </div>
    </div>
  </div>
</div>
<div class="container mt-5">
        <center>
          <div id="loading" class="loading-overlay">
            <div class="spinner">  </div>
            <p dir="rtl"> جار التحميل... </p>
          </div>          
      <button class="start add btn btn-success" onclick="startScanner('add')" type="button">Start Selling Scanner</button>
        </center>
     <center>
      <% let messages = req.flash('error'); %> 
      <% if (messages && messages.length > 0) { %> 
        <div class="alert-danger custom-alert">
          <%= messages[0] %>
        </div>
      <% } %>
     </center>
        
      </div>
    </div>

    <!-- Barcode Scanner Section -->
    <div class="col-12 col-md-6 mb-3">
      <div id="scanner-container" class="w-100" style="height: 200px; display: none;">
        <canvas id="scanner-canvas" style="display: none;"></canvas>
      </div>
      <div class="d-flex justify-content-between mt-2">
        <button class="btn btn-danger stop scnbtns flex-grow-1 me-2" style="display: none;" onclick="stopScanner()" type="reset">
          Stop Scanner
        </button>
        <button class="btn btn-primary reset scnbtns flex-grow-1" style="display: none;" onclick="resetScan()" type="reset">
          Restart Scanner
        </button>
      </div>
    </div>
    
  
</div>


    <!-- Barcode Scanner Section -->
   


  <script>
    const scannerContainer = document.querySelector("#scanner-container");
      const searchInput = document.getElementById("searchInput");
      const start = document.querySelector(".start");
      const stopScanning = document.querySelector(".stop");
      const reset = document.querySelector(".reset");
      let firstScan = true;
      let videoTrack = null;
      let flashEnabled = true
      let   quaggaInitialized = true;
      const audio = new Audio('../scanner.mp3');

      // Initialize Quagga
      let currentScannerMode = ""; // To track whether "search" or "  " is active
    
function startScanner(mode) {

  currentScannerMode = mode; // Set mode to either "search" or "add"


  if (start.style.display !== "none") {
    start.style.display = "none"; // Hide start button
    stopScanning.style.display = "block"; // Show stop button
    reset.style.display = "block"; // Show reset button
    scannerContainer.style.display = "block"; // Show scanner container

  Quagga.init(
    {
      inputStream: {
        type: "LiveStream",
        target: document.querySelector("#scanner-container"),
      },
      decoder: {
        readers: [
          "code_128_reader",
          "ean_reader",
          "ean_8_reader",
          "upc_reader",
          "code_39_reader",
        ],
      },
    },
    (err) => {
      if (err) {
        console.error(err);
        Quagga.stop();
        return;
      }
      Quagga.start();
      quaggaInitialized = true;
    }
  );
}
}

let scannedProducts = []; // Array to store scanned product details
let totalPrice = 0; // Variable to keep track of the total price

// Handle detected barcodes
Quagga.onDetected((result) => {
  const barcodeInput = document.getElementById("searchInput");
  const detectedCode = result.codeResult.code;

  if (currentScannerMode === "add") {
    if (/^\d{12,13}$/.test(detectedCode)) { // Validate barcode length
      audio.play();
      console.log("Barcode detected:", detectedCode);
      firstScan = false;
      barcodeInput.value = detectedCode; // Set the value of the barcode field
      barcodeInput.disabled = false; // Enable the barcode input field

      // AJAX request to get product details
      $.ajax({
        url: "/getProduct",
        method: "POST",
        contentType: 'application/json',
        data: JSON.stringify({ detectedCode }),
        beforeSend: function () {
          $("#loading").show(); // Show loading overlay
        },
        success: function(data) {
          $("#loading").hide(); // Hide loading overlay
          if (data.length === 0) {
            console.warn("No products found for this barcode.");
            return false;
          } else {
            // Append the received products to the table and update scannedProducts
            data.forEach(function(product) {
              let price = product.WHOLEPRICE * 1.50;
              let productRow = `
                <tr class="productsdata">
                  <td>${product.PNAME}</td>
                  <td>${product.WHOLEPRICE.toFixed(2)}</td>
                  <td>${price.toFixed(2)}</td>
                  <td>
                    <input type="number" class="form-control quantity-input" value="1" min="1" step="1" style="width: 60px;">
                  </td>
                  <td class="profit-cell">${(price - product.WHOLEPRICE).toFixed(2)}</td>
                  <td>${product.PNOTES}</td>
                  <td>${moment(product.updatedAt).format('LL')}</td>
                </tr>
              `;
              $('#tableBody').append(productRow);

              // Update scannedProducts and totalPrice
              scannedProducts.push({ name: product.PNAME, price: price });
              totalPrice += price;

              // Set the initial total price based on quantity
              const quantityInput = $('.quantity-input').last();
              quantityInput.data('previous-quantity', 1); // Store the previous quantity

              // Update total price on quantity change
              quantityInput.on('input', function() {
                const quantity = parseInt($(this).val(), 10) || 1; // Get current quantity
                const totalRowPrice = price * quantity; // Calculate total for this row
                const previousQuantity = parseInt(quantityInput.data('previous-quantity'), 10) || 1;

                // Update totalPrice
                totalPrice = totalPrice - (price * previousQuantity) + totalRowPrice;

                // Update the displayed total price
                $("#totalPrice").text(totalPrice.toFixed(2)); // Update total price display
                quantityInput.data('previous-quantity', quantity); // Update previous quantity
              });
            });

            // Show and update the total price row
            $("#totalPriceRow").show(); // Show the total price row
            $("#totalPrice").text(totalPrice.toFixed(2)); // Update total price
          }
        },
        error: function(err) {
          $("#loading").hide(); // Hide loading overlay
          console.error("Error loading products:", err);
          let errorRow = `
            <tr>
              <td colspan="8" class="text-center">An error occurred while loading products.</td>
            </tr>
          `;
          $('#tableBody').append(errorRow);
        }
      });
    } else {
      console.warn("Invalid barcode detected:", detectedCode);
      return;
    }
  }

  // Stop the scanner after detection
  stopScanner();
});
// Send POST request to search
async function sendPostRequest(barcode) {
  if (!barcode) {
    alert("Please provide a valid barcode.");
    return;
  }
  document.getElementById("loading").style.display = "flex";
  document.getElementById("loading").style.justifyContent = "center";
  const form = document.createElement("form");
  form.method = "POST";
  form.action = "/search";
  
  const input = document.createElement("input");
  input.type = "hidden";
  input.name = "barcode";
  input.value = barcode;
  
  form.appendChild(input);
  document.body.appendChild(form);
  form.submit();
}


async function stopScanner() {
if (quaggaInitialized) {
    await Quagga.stop(); // Stop Quagga if it was initialized
    quaggaInitialized = false; // Reset the initialization flag
  }
  videoTrack  = null

  stopScanning.style.display = "none";
  reset.style.display = "none";
  start.style.display = "block";
  scannerContainer.style.display = "none";
  currentScannerMode = ""; // Reset mode
  



  
}

// Attach event listeners for buttons
document.querySelector(".start.add").addEventListener("click", () => {
  startScanner("add");
});



  </script>

<!-- QuaggaJS -->


 
<form action="/getProduct" method="post">
  <div class="container mt-5">
    <div class="row mb-3">
      <div class="col-md-12">
        <input type="number" id="searchInput" class="form-control" name="search" placeholder="Search for products..." disabled>
      </div>
    </div>
  </div>
</form>
    <script>
      $(document).ready(function() {
        $('#searchInput').on('keyup', function() {
          var value = $(this).val().toLowerCase();
          $('#tableBody tr').filter(function() {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
          });
        });
      });
      </script>
      
    <div class="table-responsive">
      <table class="table table-hover bg-light">
        <thead>
          <tr>
            <th>اسم المنتج</th>
            <th>سعر الجملة</th>
            <th>السعر</th>
            <th>الكمية</th>
            <th>الربح</th>
            <th>ملاحظات</th>
            <th>اخر تعديل</th>
          </tr>
        </thead>
        <tbody id="tableBody">
   
            <tr class="productsdata">
             
            
            </tr>
        
        </tbody>
        <form action="/sale/add" method="post">
        <tr id="totalPriceRow" class="position-fixed bottom-0 start-50 translate-middle-x" style="display: none;">
        <hr>
      
          <td colspan="6" class="text-start"><strong>المجموع:</strong></td>
          <td colspan="2" class="text-center"><strong id="totalPrice"><input type="text" value="0.00" name="TOTAL"></strong></td>
        </tr>
      </table>

<center>
      <button type="submit" class="btn btn-success text-center">Close the Deal</button>
</center>
    </form> 
  </div>

    <!-- Update Form -->
 
  </div>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/locale/ar.min.js"></script>





  
  <!-- <script src="../js/Crud.js"></script> -->
</body>
</html>
