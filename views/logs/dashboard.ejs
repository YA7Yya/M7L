<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Dashboard - Dark Style</title>

    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Montserrat"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <link rel="stylesheet" href="../../CSS/dashboard.css" />
  </head>

  <body>
    <div id="wrapper">
      <div class="content-area">
        <div class="container-fluid">
          <div class="text-left mt-3 mb-3 d-fixed"></div>
          <div class="main">
            <div class="row sparkboxes mt-4">
              <div class="col-md-3">
                <div class="box box1">
                  <div class="details">
                    <h3 class="Visits"></h3>
                    <h4>VISITS</h4>
                  </div>
                  <div id="spark1"></div>
                </div>
              </div>
              <div class="col-md-3">
                <div class="box box2">
                  <div class="details">
                    <h3 class="Adds"></h3>
                    <h4>Adds</h4>
                  </div>
                  <div id="spark2"></div>
                </div>
              </div>
              <div class="col-md-3">
                <div class="box box3">
                  <div class="details">
                    <h3 class="Updates"></h3>
                    <h4>Updates</h4>
                  </div>
                  <div id="spark3"></div>
                </div>
              </div>
              <div class="col-md-3">
                <div class="box box4">
                  <div class="details">
                    <h3 class="Deletes"></h3>
                    <h4>Deletes</h4>
                  </div>
                  <div id="spark4"></div>
                </div>
              </div>
            </div>

            <div class="row mt-4">
              <div class="col-md-6 offset-md-3">
                <div class="box shadow mt-4">
                  <div id="chart"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="../../../socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.50.0/apexcharts.min.js" integrity="sha512-h3DSSmgtvmOo5gm3pA/YcDNxtlAZORKVNAcMQhFi3JJgY41j9G06WsepipL7+l38tn9Awc5wgMzJGrUWaeUEGA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
  const socket = io();
  const Adds = document.querySelector(".Adds");
  const Updates = document.querySelector(".Updates");
  const Deletes = document.querySelector(".Deletes");
  const Visits = document.querySelector(".Visits");

  async function fetchEmployeeData() {
    const response = await fetch(`/api/employee-stats/<%= username %>`);
    const data = await response.json();
    return data;
  }

  async function renderChart() {
    let employeeData = await fetchEmployeeData();
    Adds.innerHTML = employeeData.addations;
    Updates.innerHTML = employeeData.updateations;
    Deletes.innerHTML = employeeData.deleteations;
    Visits.innerHTML = employeeData.visits;

    function sortDataDescending(data) {
      return Object.keys(data)
        .map((key) => ({ name: key, value: data[key] }))
        .sort((a, b) => b.value - a.value);
    }

    const sortedData = sortDataDescending({
      Adds: employeeData.addations,
      Updates: employeeData.updateations,
      Deletes: employeeData.deleteations,
    });

    const sortedLabels = sortedData.map((item) => item.name);
    const sortedValues = sortedData.map((item) => item.value);

    window.Apex = {
      chart: {
        foreColor: "#ccc",
        toolbar: {
          show: false,
        },
      },
      stroke: {
        width: 3,
      },
      dataLabels: {
        enabled: false,
      },
      tooltip: {
        theme: "dark",
      },
      grid: {
        borderColor: "#535A6C",
        xaxis: {
          lines: {
            show: true,
          },
        },
      },
    };

    const spark1Options = {
      chart: {
        id: "spark1",
        group: "sparks",
        type: "line",
        height: 80,
        sparkline: {
          enabled: true,
        },
        dropShadow: {
          enabled: true,
          top: 1,
          left: 1,
          blur: 2,
          opacity: 0.2,
        },
      },
      series: [{ data: [employeeData.visits] }],
      stroke: { curve: "smooth" },
      markers: { size: 0 },
      grid: {
        padding: {
          top: 20,
          bottom: 10,
          left: 110,
        },
      },
      colors: ["#fff"],
      tooltip: {
        x: { show: false },
        y: {
          title: {
            formatter: function formatter(val) {
              return "";
            },
          },
        },
      },
    };

    const spark2Options = {
      chart: {
        id: "spark2",
        group: "sparks",
        type: "line",
        height: 80,
        sparkline: {
          enabled: true,
        },
        dropShadow: {
          enabled: true,
          top: 1,
          left: 1,
          blur: 2,
          opacity: 0.2,
        },
      },
      series: [{ data: [employeeData.addations] }],
      stroke: { curve: "smooth" },
      grid: {
        padding: {
          top: 20,
          bottom: 10,
          left: 110,
        },
      },
      markers: { size: 0 },
      colors: ["#fff"],
      tooltip: {
        x: { show: false },
        y: {
          title: {
            formatter: function formatter(val) {
              return "";
            },
          },
        },
      },
    };

    const spark3Options = {
      chart: {
        id: "spark3",
        group: "sparks",
        type: "line",
        height: 80,
        sparkline: {
          enabled: true,
        },
        dropShadow: {
          enabled: true,
          top: 1,
          left: 1,
          blur: 2,
          opacity: 0.2,
        },
      },
      series: [{ data: [employeeData.updateations] }],
      stroke: { curve: "smooth" },
      markers: { size: 0 },
      grid: {
        padding: {
          top: 20,
          bottom: 10,
          left: 110,
        },
      },
      colors: ["#fff"],
      xaxis: {
        crosshairs: { width: 1 },
      },
      tooltip: {
        x: { show: false },
        y: {
          title: {
            formatter: function formatter(val) {
              return "";
            },
          },
        },
      },
    };

    const spark4Options = {
      chart: {
        id: "spark4",
        group: "sparks",
        type: "line",
        height: 80,
        sparkline: {
          enabled: true,
        },
        dropShadow: {
          enabled: true,
          top: 1,
          left: 1,
          blur: 2,
          opacity: 0.2,
        },
      },
      series: [{ data: [employeeData.deleteations] }],
      stroke: { curve: "smooth" },
      markers: { size: 0 },
      grid: {
        padding: {
          top: 20,
          bottom: 10,
          left: 110,
        },
      },
      colors: ["#fff"],
      xaxis: {
        crosshairs: { width: 1 },
      },
      tooltip: {
        x: { show: false },
        y: {
          title: {
            formatter: function formatter(val) {
              return "";
            },
          },
        },
      },
    };

    var options = {
      series: [
        {
          name: "",
          data: sortedValues,
        },
      ],
      chart: {
        type: "bar",
        height: 350,
      },
      plotOptions: {
        bar: {
          borderRadius: 0,
          horizontal: true,
          distributed: true,
          barHeight: "80%",
          isFunnel: false,
        },
      },
      colors: [
        "#F44F5E",
        "#E55A89",
        "#D863B1",
        "#CA6CD8",
        "#B57BED",
        "#8D95EB",
        "#62ACEA",
        "#4BC3E6",
      ],
      dataLabels: {
        enabled: true,
        formatter: function (val, opt) {
          return (
            opt.w.globals.labels[opt.dataPointIndex] + " " + `(${val})`
          );
        },
        dropShadow: {
          enabled: true,
        },
      },
      title: {
        text: `${employeeData.username}'s Statistics`,
        align: "middle",
      },
      xaxis: {
        categories: sortedLabels,
      },
      legend: {
        show: false,
      },
    };

    const spark1Chart = new ApexCharts(document.querySelector("#spark1"), spark1Options);
    const spark2Chart = new ApexCharts(document.querySelector("#spark2"), spark2Options);
    const spark3Chart = new ApexCharts(document.querySelector("#spark3"), spark3Options);
    const spark4Chart = new ApexCharts(document.querySelector("#spark4"), spark4Options);
    var chart = new ApexCharts(document.querySelector("#chart"), options);

    spark1Chart.render();
    spark2Chart.render();
    spark3Chart.render();
    spark4Chart.render();

    socket.on("visitsUpdate", (data) => {
      Visits.innerHTML = data;
      spark1Chart.updateSeries([{ data: [data] }], true);
    });

    socket.on("addationsUpdate", (data) => {
      let addations = ++data
      Adds.innerHTML = addations;
      spark2Chart.updateSeries([{ data: [addations] }], true);

      const newSortedData = sortDataDescending({
        Adds: addations,
        Updates: Updates.innerHTML,
        Deletes: Deletes.innerHTML,
      });

      const newSortedLabels = newSortedData.map((item) => item.name);
      const newSortedValues = newSortedData.map((item) => item.value);

      chart.updateOptions({
        series: [{ data: newSortedValues }],
        xaxis: { categories: newSortedLabels },
      });

    });

    socket.on("updateationsUpdate", (data) => {
      let updateations = ++data
      Updates.innerHTML = updateations;
      spark3Chart.updateSeries([{ data: [updateations] }], true);

      const newSortedData = sortDataDescending({
        Adds: Adds.innerHTML,
        Updates: updateations,
        Deletes: Deletes.innerHTML,
      });

      const newSortedLabels = newSortedData.map((item) => item.name);
      const newSortedValues = newSortedData.map((item) => item.value);

      chart.updateOptions({
        series: [{ data: newSortedValues }],
        xaxis: { categories: newSortedLabels },
      });
    });

    socket.on("deleteationsUpdate", (data) => {
      let deleteations = ++data
      Deletes.innerHTML = deleteations;
      spark4Chart.updateSeries([{ data: [deleteations] }], true);

      const newSortedData = sortDataDescending({
        Adds: Adds.innerHTML,
        Updates: Updates.innerHTML,
        Deletes: deleteations,
      });

      const newSortedLabels = newSortedData.map((item) => item.name);
      const newSortedValues = newSortedData.map((item) => item.value);

      chart.updateOptions({
        series: [{ data: newSortedValues }],
        xaxis: { categories: newSortedLabels },
      });
    });

    chart.render();
  }

  document.addEventListener("DOMContentLoaded", renderChart);
    </script>
  </body>
</html>
